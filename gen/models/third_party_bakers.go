// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// ThirdPartyBakers third party bakers
// swagger:model ThirdPartyBakers
type ThirdPartyBakers struct {

	// baker
	Baker string `json:"baker,omitempty"`

	// providers
	Providers []*ThirdPartyBakersProvidersItems0 `json:"providers"`
}

// Validate validates this third party bakers
func (m *ThirdPartyBakers) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateProviders(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ThirdPartyBakers) validateProviders(formats strfmt.Registry) error {

	if swag.IsZero(m.Providers) { // not required
		return nil
	}

	for i := 0; i < len(m.Providers); i++ {
		if swag.IsZero(m.Providers[i]) { // not required
			continue
		}

		if m.Providers[i] != nil {
			if err := m.Providers[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("providers" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *ThirdPartyBakers) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ThirdPartyBakers) UnmarshalBinary(b []byte) error {
	var res ThirdPartyBakers
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// ThirdPartyBakersProvidersItems0 third party bakers providers items0
// swagger:model ThirdPartyBakersProvidersItems0
type ThirdPartyBakersProvidersItems0 struct {

	// address
	Address string `json:"address,omitempty"`

	// available capacity
	AvailableCapacity int64 `json:"available_capacity,omitempty"`

	// efficiency
	Efficiency float64 `json:"efficiency,omitempty"`

	// fee
	Fee float64 `json:"fee,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// number
	Number int64 `json:"number,omitempty"`

	// payout accuracy
	PayoutAccuracy string `json:"payout_accuracy,omitempty"`

	// provider
	Provider string `json:"provider,omitempty"`

	// staking balance
	StakingBalance int64 `json:"staking_balance,omitempty"`

	// yield
	Yield float64 `json:"yield,omitempty"`
}

// Validate validates this third party bakers providers items0
func (m *ThirdPartyBakersProvidersItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ThirdPartyBakersProvidersItems0) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ThirdPartyBakersProvidersItems0) UnmarshalBinary(b []byte) error {
	var res ThirdPartyBakersProvidersItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
