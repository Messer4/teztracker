// Code generated by go-swagger; DO NOT EDIT.

package accounts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// GetAccountTotalBakingListHandlerFunc turns a function with the right signature into a get account total baking list handler
type GetAccountTotalBakingListHandlerFunc func(GetAccountTotalBakingListParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetAccountTotalBakingListHandlerFunc) Handle(params GetAccountTotalBakingListParams) middleware.Responder {
	return fn(params)
}

// GetAccountTotalBakingListHandler interface for that can handle valid get account total baking list params
type GetAccountTotalBakingListHandler interface {
	Handle(GetAccountTotalBakingListParams) middleware.Responder
}

// NewGetAccountTotalBakingList creates a new http.Handler for the get account total baking list operation
func NewGetAccountTotalBakingList(ctx *middleware.Context, handler GetAccountTotalBakingListHandler) *GetAccountTotalBakingList {
	return &GetAccountTotalBakingList{Context: ctx, Handler: handler}
}

/*GetAccountTotalBakingList swagger:route GET /v2/data/{platform}/{network}/accounts/baking/{accountId}/total Accounts getAccountTotalBakingList

GetAccountTotalBakingList get account total baking list API

*/
type GetAccountTotalBakingList struct {
	Context *middleware.Context
	Handler GetAccountTotalBakingListHandler
}

func (o *GetAccountTotalBakingList) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewGetAccountTotalBakingListParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
