// Code generated by go-swagger; DO NOT EDIT.

package accounts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// GetAccountBakedBlocksListHandlerFunc turns a function with the right signature into a get account baked blocks list handler
type GetAccountBakedBlocksListHandlerFunc func(GetAccountBakedBlocksListParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetAccountBakedBlocksListHandlerFunc) Handle(params GetAccountBakedBlocksListParams) middleware.Responder {
	return fn(params)
}

// GetAccountBakedBlocksListHandler interface for that can handle valid get account baked blocks list params
type GetAccountBakedBlocksListHandler interface {
	Handle(GetAccountBakedBlocksListParams) middleware.Responder
}

// NewGetAccountBakedBlocksList creates a new http.Handler for the get account baked blocks list operation
func NewGetAccountBakedBlocksList(ctx *middleware.Context, handler GetAccountBakedBlocksListHandler) *GetAccountBakedBlocksList {
	return &GetAccountBakedBlocksList{Context: ctx, Handler: handler}
}

/*GetAccountBakedBlocksList swagger:route GET /v2/data/{platform}/{network}/accounts/baking/{accountId}/blocks/{cycleId} Accounts getAccountBakedBlocksList

GetAccountBakedBlocksList get account baked blocks list API

*/
type GetAccountBakedBlocksList struct {
	Context *middleware.Context
	Handler GetAccountBakedBlocksListHandler
}

func (o *GetAccountBakedBlocksList) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewGetAccountBakedBlocksListParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
