// Code generated by go-swagger; DO NOT EDIT.

package accounts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"

	models "github.com/everstake/teztracker/gen/models"
)

// GetPublicBakersListOKCode is the HTTP code returned for type GetPublicBakersListOK
const GetPublicBakersListOKCode int = 200

/*GetPublicBakersListOK Query Endpoint for getting list of baker accounts ordered by staking balance.

swagger:response getPublicBakersListOK
*/
type GetPublicBakersListOK struct {
	/*The total number of data entries.

	 */
	XTotalCount int64 `json:"X-Total-Count"`

	/*
	  In: Body
	*/
	Payload []models.PublicBaker `json:"body,omitempty"`
}

// NewGetPublicBakersListOK creates GetPublicBakersListOK with default headers values
func NewGetPublicBakersListOK() *GetPublicBakersListOK {

	return &GetPublicBakersListOK{}
}

// WithXTotalCount adds the xTotalCount to the get public bakers list o k response
func (o *GetPublicBakersListOK) WithXTotalCount(xTotalCount int64) *GetPublicBakersListOK {
	o.XTotalCount = xTotalCount
	return o
}

// SetXTotalCount sets the xTotalCount to the get public bakers list o k response
func (o *GetPublicBakersListOK) SetXTotalCount(xTotalCount int64) {
	o.XTotalCount = xTotalCount
}

// WithPayload adds the payload to the get public bakers list o k response
func (o *GetPublicBakersListOK) WithPayload(payload []models.PublicBaker) *GetPublicBakersListOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get public bakers list o k response
func (o *GetPublicBakersListOK) SetPayload(payload []models.PublicBaker) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetPublicBakersListOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header X-Total-Count

	xTotalCount := swag.FormatInt64(o.XTotalCount)
	if xTotalCount != "" {
		rw.Header().Set("X-Total-Count", xTotalCount)
	}

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]models.PublicBaker, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetPublicBakersListBadRequestCode is the HTTP code returned for type GetPublicBakersListBadRequest
const GetPublicBakersListBadRequestCode int = 400

/*GetPublicBakersListBadRequest Bad request

swagger:response getPublicBakersListBadRequest
*/
type GetPublicBakersListBadRequest struct {
}

// NewGetPublicBakersListBadRequest creates GetPublicBakersListBadRequest with default headers values
func NewGetPublicBakersListBadRequest() *GetPublicBakersListBadRequest {

	return &GetPublicBakersListBadRequest{}
}

// WriteResponse to the client
func (o *GetPublicBakersListBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(400)
}

// GetPublicBakersListNotFoundCode is the HTTP code returned for type GetPublicBakersListNotFound
const GetPublicBakersListNotFoundCode int = 404

/*GetPublicBakersListNotFound Not Found

swagger:response getPublicBakersListNotFound
*/
type GetPublicBakersListNotFound struct {
}

// NewGetPublicBakersListNotFound creates GetPublicBakersListNotFound with default headers values
func NewGetPublicBakersListNotFound() *GetPublicBakersListNotFound {

	return &GetPublicBakersListNotFound{}
}

// WriteResponse to the client
func (o *GetPublicBakersListNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(404)
}
