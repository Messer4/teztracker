// Code generated by go-swagger; DO NOT EDIT.

package voting

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"

	models "github.com/everstake/teztracker/gen/models"
)

// GetNonVotersByPeriodIDOKCode is the HTTP code returned for type GetNonVotersByPeriodIDOK
const GetNonVotersByPeriodIDOKCode int = 200

/*GetNonVotersByPeriodIDOK Query compatibility endpoint for ballots

swagger:response getNonVotersByPeriodIdOK
*/
type GetNonVotersByPeriodIDOK struct {
	/*The total number of data entries.

	 */
	XTotalCount int64 `json:"X-Total-Count"`

	/*
	  In: Body
	*/
	Payload []*models.NonVoter `json:"body,omitempty"`
}

// NewGetNonVotersByPeriodIDOK creates GetNonVotersByPeriodIDOK with default headers values
func NewGetNonVotersByPeriodIDOK() *GetNonVotersByPeriodIDOK {

	return &GetNonVotersByPeriodIDOK{}
}

// WithXTotalCount adds the xTotalCount to the get non voters by period Id o k response
func (o *GetNonVotersByPeriodIDOK) WithXTotalCount(xTotalCount int64) *GetNonVotersByPeriodIDOK {
	o.XTotalCount = xTotalCount
	return o
}

// SetXTotalCount sets the xTotalCount to the get non voters by period Id o k response
func (o *GetNonVotersByPeriodIDOK) SetXTotalCount(xTotalCount int64) {
	o.XTotalCount = xTotalCount
}

// WithPayload adds the payload to the get non voters by period Id o k response
func (o *GetNonVotersByPeriodIDOK) WithPayload(payload []*models.NonVoter) *GetNonVotersByPeriodIDOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get non voters by period Id o k response
func (o *GetNonVotersByPeriodIDOK) SetPayload(payload []*models.NonVoter) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetNonVotersByPeriodIDOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header X-Total-Count

	xTotalCount := swag.FormatInt64(o.XTotalCount)
	if xTotalCount != "" {
		rw.Header().Set("X-Total-Count", xTotalCount)
	}

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*models.NonVoter, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetNonVotersByPeriodIDNotFoundCode is the HTTP code returned for type GetNonVotersByPeriodIDNotFound
const GetNonVotersByPeriodIDNotFoundCode int = 404

/*GetNonVotersByPeriodIDNotFound Not Found

swagger:response getNonVotersByPeriodIdNotFound
*/
type GetNonVotersByPeriodIDNotFound struct {
}

// NewGetNonVotersByPeriodIDNotFound creates GetNonVotersByPeriodIDNotFound with default headers values
func NewGetNonVotersByPeriodIDNotFound() *GetNonVotersByPeriodIDNotFound {

	return &GetNonVotersByPeriodIDNotFound{}
}

// WriteResponse to the client
func (o *GetNonVotersByPeriodIDNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(404)
}
