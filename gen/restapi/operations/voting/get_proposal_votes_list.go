// Code generated by go-swagger; DO NOT EDIT.

package voting

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// GetProposalVotesListHandlerFunc turns a function with the right signature into a get proposal votes list handler
type GetProposalVotesListHandlerFunc func(GetProposalVotesListParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetProposalVotesListHandlerFunc) Handle(params GetProposalVotesListParams) middleware.Responder {
	return fn(params)
}

// GetProposalVotesListHandler interface for that can handle valid get proposal votes list params
type GetProposalVotesListHandler interface {
	Handle(GetProposalVotesListParams) middleware.Responder
}

// NewGetProposalVotesList creates a new http.Handler for the get proposal votes list operation
func NewGetProposalVotesList(ctx *middleware.Context, handler GetProposalVotesListHandler) *GetProposalVotesList {
	return &GetProposalVotesList{Context: ctx, Handler: handler}
}

/*GetProposalVotesList swagger:route GET /v2/proposal_votes/{id} Voting getProposalVotesList

GetProposalVotesList get proposal votes list API

*/
type GetProposalVotesList struct {
	Context *middleware.Context
	Handler GetProposalVotesListHandler
}

func (o *GetProposalVotesList) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewGetProposalVotesListParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
